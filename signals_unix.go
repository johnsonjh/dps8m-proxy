//go:build !windows && !plan9 && !wasm && !aix

///////////////////////////////////////////////////////////////////////////////////////////////////
// DPS8M Proxy - signals_unix.go
// Copyright (c) 2025 Jeffrey H. Johnson
// Copyright (c) 2025 The DPS8M Development Team
// SPDX-License-Identifier: MIT
// scspell-id: 3d541baa-6bd2-11f0-a91c-80ee73e9b8e7
///////////////////////////////////////////////////////////////////////////////////////////////////

// DPS8M Proxy
//
//nolint:godoclint,nolintlint
package main

///////////////////////////////////////////////////////////////////////////////////////////////////

import (
	"os"
	"os/signal"
	"syscall"
)

///////////////////////////////////////////////////////////////////////////////////////////////////

func runSignalHandlers() {
	sigChan := make(chan os.Signal, 1)
	signal.Notify(sigChan,
		syscall.SIGINT, syscall.SIGTERM, syscall.SIGQUIT,
		syscall.SIGHUP, syscall.SIGUSR1, syscall.SIGUSR2)

	go func() {
		for s := range sigChan {
			handleSignal(s)
		}
	}()
}

///////////////////////////////////////////////////////////////////////////////////////////////////
// vim: set ft=go noexpandtab tabstop=4 cc=100 :
///////////////////////////////////////////////////////////////////////////////////////////////////
