//go:build plan9

///////////////////////////////////////////////////////////////////////////////////////////////////
// DPS8M Proxy - signals_plan9.go
// Copyright (c) 2025 Jeffrey H. Johnson
// Copyright (c) 2025 The DPS8M Development Team
// SPDX-License-Identifier: MIT
// scspell-id: 34905100-6bd2-11f0-b69a-80ee73e9b8e7
///////////////////////////////////////////////////////////////////////////////////////////////////

// DPS8M Proxy
package main

///////////////////////////////////////////////////////////////////////////////////////////////////

import (
	"log"
	"os"
	"os/signal"
	"syscall"
)

///////////////////////////////////////////////////////////////////////////////////////////////////

func runSignalHandlers() {
	sigChan := make(chan os.Signal, 1)
	signal.Notify(sigChan, syscall.SIGINT, syscall.SIGHUP)

	go func() {
		for s := range sigChan {
			switch s {
			case syscall.SIGHUP:
				log.Printf("%sSIGHUP received: Reloading whitelist and/or blacklist.\r\n",
					bellPrefix())
				reloadLists()

			case syscall.SIGINT:
				immediateShutdown()
			}
		}
	}()
}

///////////////////////////////////////////////////////////////////////////////////////////////////
// vim: set ft=go noexpandtab tabstop=4 cc=100 :
///////////////////////////////////////////////////////////////////////////////////////////////////
