//go:build aix

///////////////////////////////////////////////////////////////////////////////////////////////////
// DPS8M Proxy - signals_aix.go
// Copyright (c) 2025 Jeffrey H. Johnson
// Copyright (c) 2025 The DPS8M Development Team
// SPDX-License-Identifier: MIT
///////////////////////////////////////////////////////////////////////////////////////////////////

// DPS8M Proxy
package main

///////////////////////////////////////////////////////////////////////////////////////////////////

import (
	"log"
	"os"
	"os/signal"
	"runtime/debug"
	"syscall"
)

///////////////////////////////////////////////////////////////////////////////////////////////////

func lowerGOGC() {
	currentGOGC := debug.SetGCPercent(-1)
	newGOGC := currentGOGC / 2
	if newGOGC <= 1 {
		newGOGC = 1
	}
	debug.SetGCPercent(newGOGC)
}

///////////////////////////////////////////////////////////////////////////////////////////////////

func runSignalHandlers() {
	sigChan := make(chan os.Signal, 1)
	signal.Notify(sigChan,
		syscall.SIGINT, syscall.SIGTERM, syscall.SIGQUIT,
		syscall.SIGHUP, syscall.SIGUSR1, syscall.SIGUSR2, syscall.SIGDANGER)

	go func() {
		for s := range sigChan {
			if s == syscall.SIGDANGER {
				log.Println(
					"SIGDANGER received: Requesting garbage collection and freeing memory.")
				debug.FreeOSMemory()
				lowerGOGC()
			} else {
				handleSignal(s)
			}
		}
	}()
}

///////////////////////////////////////////////////////////////////////////////////////////////////
// vim: set ft=go noexpandtab tabstop=4 cc=100 :
///////////////////////////////////////////////////////////////////////////////////////////////////
